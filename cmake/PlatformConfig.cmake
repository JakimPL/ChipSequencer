find_program(CCACHE_PROGRAM ccache)
if(CCACHE_PROGRAM)
    message(STATUS "Using ccache: ${CCACHE_PROGRAM}")
    set(CMAKE_C_COMPILER_LAUNCHER "${CCACHE_PROGRAM}")
    set(CMAKE_CXX_COMPILER_LAUNCHER "${CCACHE_PROGRAM}")
endif()

if(WIN32)
    set(COMMON_C_FLAGS "-Wno-pointer-arith -Wno-address-of-packed-member")
    set(COMMON_CXX_FLAGS "-Wno-pointer-arith -Wno-address-of-packed-member")
else()
    set(COMMON_C_FLAGS "-m32 -Wno-pointer-arith -Wno-address-of-packed-member")
    set(COMMON_CXX_FLAGS "-m32 -Wno-pointer-arith -Wno-address-of-packed-member")
    set(CMAKE_LIBRARY_PATH /usr/lib/i386-linux-gnu ${CMAKE_LIBRARY_PATH})
    set(ENV{PKG_CONFIG_PATH} "/usr/lib/i386-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig")
endif()

if(NOT CMAKE_BUILD_TYPE STREQUAL "Release")
    set(COMMON_C_FLAGS "${COMMON_C_FLAGS} -DCATCH_SEGFAULT")
    set(COMMON_CXX_FLAGS "${COMMON_CXX_FLAGS} -DCATCH_SEGFAULT")
endif()

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    if(WIN32)
        set(CMAKE_C_FLAGS "${COMMON_C_FLAGS} -g")
        set(CMAKE_CXX_FLAGS "${COMMON_CXX_FLAGS} -g")
        set(SANITIZER_FLAGS "")
    else()
        set(CMAKE_C_FLAGS "${COMMON_C_FLAGS} -g")
        set(CMAKE_CXX_FLAGS "${COMMON_CXX_FLAGS} -fsanitize=address -g")
        set(SANITIZER_FLAGS "-fsanitize=address")
    endif()
else()
    set(CMAKE_C_FLAGS "${COMMON_C_FLAGS} -O2 -DNDEBUG")
    set(CMAKE_CXX_FLAGS "${COMMON_CXX_FLAGS} -O2 -DNDEBUG")
    set(SANITIZER_FLAGS "")
endif()
